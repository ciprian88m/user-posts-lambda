plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.springframework.boot' version '3.2.0'
    id 'org.springframework.boot.experimental.thin-launcher' version "1.0.31.RELEASE"
}

group = 'dev.ciprian'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

ext {
    set('springFrameworkVersion', '6.1.2')
    set('springCloudVersion', '2023.0.0')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework:spring-framework-bom:$springFrameworkVersion"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-function-web'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'

    implementation platform('software.amazon.awssdk:bom:2.22.9')
    implementation 'software.amazon.awssdk:cognitoidentityprovider'
    implementation 'software.amazon.awssdk:dynamodb'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

assemble.dependsOn = [thinJar, shadowJar]

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

shadowJar.mustRunAfter thinJar

import com.github.jengelman.gradle.plugins.shadow.transformers.*

thinJar {
    manifest {
        attributes(
                'Main-Class': 'dev.ciprian.Application'
        )
    }
}

shadowJar {
    archiveClassifier = 'aws'
    manifest {
        inheritFrom(project.tasks.thinJar.manifest)
    }
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
    append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = 'append'
    }
}